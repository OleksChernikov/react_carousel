{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","visibleIndex","setVisibleIndex","translateX","setTranslateX","visiblePhoto","slice","sizeTranslate","useEffect","wrapElement","document","querySelector","imgElem","style","width","height","transform","transition","className","type","onClick","map","elem","index","src","alt","length","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"gQAmGeA,EAxFmB,SAAC,GAM5B,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,kBAEA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAeV,EAAOW,MAAML,EAAcA,EAAeL,GAC3DW,EAAgB,EAGlBA,EADW,IAATX,GAA4B,IAAdC,EACA,IAEA,IA8ClB,OAnBAW,qBAAU,WACR,IAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAUF,SAASC,cAAc,kBAEvCC,EAAQC,MAAMC,MAAd,UAAyBhB,EAAzB,MACAc,EAAQC,MAAME,OAAd,UAA0BjB,EAA1B,MAGEW,EAAYI,MAAMC,MADP,IAATlB,GAA4B,IAAdC,EACU,QAEA,QAGxBY,IACFA,EAAYI,MAAMG,UAAlB,qBAA4Cb,EAA5C,OACAM,EAAYI,MAAMI,WAAlB,cAAsClB,EAAtC,qBAED,CAACI,IAGF,qBAAKe,UAAU,WAAf,SACE,qCACE,wBAAQC,KAAK,SAASD,UAAS,wCAAoD,IAAjBjB,GAAsB,YAAcmB,QAlCzF,WACbnB,EAAeL,GAAQ,IACzBM,EAAgBD,EAAeL,GAC/BQ,EAAcD,EAAaI,IAGzBN,EAAeL,KAAU,IAC3BM,EAAiBD,EAAe,EAAML,GACtCQ,EAAcD,EAAa,OA0BzB,kBACA,qBAAKe,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,iBAAd,SACGb,EAAagB,KAAI,SAACC,EAAMC,GAAP,OAChB,6BACE,qBAAKC,IAAKF,EAAMG,IAAG,UAAKF,EAAQ,GAAKL,UAAU,mBADxCI,YAOjB,wBACEH,KAAK,SACLD,UAAS,yCAAoCjB,IAAkBN,EAAO+B,OAAS9B,GAAS,YACxFwB,QA7DW,WACbnB,EAAeL,EAAOD,EAAO+B,SAC/BxB,EAAgBD,EAAeL,GAC/BQ,EAAcD,EAAaI,IAGzBN,EAAsB,EAAPL,IAAaD,EAAO+B,OAAS,IAC9CxB,EAAiBD,EAAe,EAAML,GACtCQ,EAAcD,EAAa,OAkDzB,wBC1EFwB,E,4MACJC,MAAQ,CACNjC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWkC,KAAKD,MAAhBjC,OAER,OACE,sBAAKuB,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CvB,EAAO+B,OAAjD,aACA,cAAC,EAAD,CACE/B,OAAQA,EACRC,KA9BG,EA+BHC,UA9BQ,EA+BRC,UA9BQ,IA+BRC,kBA9BgB,a,GAER+B,IAAMC,WAmCTJ,IC7CfK,IAASC,OAAO,cAAC,EAAD,IAASvB,SAASwB,eAAe,W","file":"static/js/main.d5233c06.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [visibleIndex, setVisibleIndex] = useState(0);\n  const [translateX, setTranslateX] = useState(0);\n  const visiblePhoto = images.slice(visibleIndex, visibleIndex + step);\n  let sizeTranslate = 0;\n\n  if (step === 2 || frameSize === 2) {\n    sizeTranslate = 260;\n  } else {\n    sizeTranslate = 390;\n  }\n\n  const handleNext = () => {\n    if (visibleIndex + step < images.length) {\n      setVisibleIndex(visibleIndex + step);\n      setTranslateX(translateX + sizeTranslate);\n    }\n\n    if (visibleIndex + step * 2 === images.length + 2) {\n      setVisibleIndex((visibleIndex - 2) + (step));\n      setTranslateX(translateX + 130);\n    }\n  };\n\n  const handlePrev = () => {\n    if (visibleIndex - step >= 0) {\n      setVisibleIndex(visibleIndex - step);\n      setTranslateX(translateX - sizeTranslate);\n    }\n\n    if (visibleIndex - step === -2) {\n      setVisibleIndex((visibleIndex + 2) - (step));\n      setTranslateX(translateX - 130);\n    }\n  };\n\n  useEffect(() => {\n    const wrapElement = document.querySelector('.Wrap') as HTMLElement;\n    const imgElem = document.querySelector('.Carousel__img') as HTMLElement;\n\n    imgElem.style.width = `${itemWidth}px`;\n    imgElem.style.height = `${itemWidth}px`;\n\n    if (step === 2 || frameSize === 2) {\n      wrapElement.style.width = '260px';\n    } else {\n      wrapElement.style.width = '390px';\n    }\n\n    if (wrapElement) {\n      wrapElement.style.transform = `translateX(${translateX}px)`;\n      wrapElement.style.transition = `all ${animationDuration}ms ease-in-out`;\n    }\n  }, [translateX]);\n\n  return (\n    <div className=\"MainWrap\">\n      <>\n        <button type=\"button\" className={`Carousel__button button--left ${visibleIndex === 0 && 'disabled'}`} onClick={handlePrev}>Prev</button>\n        <div className=\"Carousel\">\n          <div className=\"Wrap\">\n            <ul className=\"Carousel__list\">\n              {visiblePhoto.map((elem, index) => (\n                <li key={elem}>\n                  <img src={elem} alt={`${index + 1}`} className=\"Carousel__img\" />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className={`Carousel__button button--right ${visibleIndex === (images.length - step) && 'disabled'}`}\n          onClick={handleNext}\n        >\n          Next\n        </button>\n      </>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst step = 3;\nconst frameSize = 3;\nconst itemWidth = 130;\nconst animationDuration = 1000;\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}