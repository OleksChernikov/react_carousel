{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","stepChange","setStepChange","frameSizeChange","setFrameSizeChange","itemWidthChange","setItemWidthChange","duration","setDuration","infiniteImg","setInfiniteImg","visibleIndex","setVisibleIndex","useEffect","wrapElement","document","querySelector","style","width","transition","className","map","elem","index","src","alt","height","type","onClick","disabled","newIndex","length","transform","htmlFor","id","min","max","onChange","e","parseInt","target","value","checked","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3f60fd84.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [stepChange, setStepChange] = useState(step);\n  const [frameSizeChange, setFrameSizeChange] = useState(frameSize);\n  const [itemWidthChange, setItemWidthChange] = useState(itemWidth);\n  const [duration, setDuration] = useState(animationDuration);\n  const [infiniteImg, setInfiniteImg] = useState(infinite);\n  const [visibleIndex, setVisibleIndex] = useState(0);\n\n  const handleNext = () => {\n    const newIndex = ((visibleIndex + stepChange) % images.length);\n\n    setVisibleIndex(newIndex);\n\n    const listElement = document.querySelector(\n      '.Carousel__list',\n    ) as HTMLElement;\n\n    listElement.style.transform = `translateX(${newIndex * itemWidthChange}px)`;\n\n    setVisibleIndex(newIndex);\n\n    // if (images.length - (visibleIndex + frameSizeChange)< stepChange) {\n    //   setVisibleIndex((images.length - stepChange));\n    // }\n\n    // if ((visibleIndex + frameSizeChange) === images.length) {\n    //   setVisibleIndex(0);\n    // }\n  };\n\n  const handlePrev = () => {\n    // const newIndex = (visibleIndex - stepChange);\n\n    // setVisibleIndex(newIndex);\n    // animationWidth = (-itemWidthChange);\n    // if ((visibleIndex - frameSizeChange) < 0) {\n    //   setVisibleIndex((0));\n    // }\n\n    // if (visibleIndex < 1) {\n    //   setVisibleIndex(images.length - frameSizeChange);\n    // }\n  };\n\n  useEffect(() => {\n    const wrapElement = document.querySelector('.Carousel') as HTMLElement;\n    const visibleImg = document.querySelector('.Carousel__list') as HTMLElement;\n\n    visibleImg.style.width = `${itemWidthChange * frameSizeChange}px`;\n    wrapElement.style.transition = `all ${duration}ms ease-in-out`;\n  }, [stepChange, frameSizeChange, itemWidthChange, duration]);\n\n  return (\n    <div className=\"MainWrap\">\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\">\n          {images.map((elem, index) => (\n            <li key={elem}>\n              <img\n                key={elem}\n                src={elem}\n                alt={`${index + 1}`}\n                className=\"Carousel__img\"\n                style={{ width: `${itemWidthChange}px`, height: `${itemWidthChange}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrev}\n          disabled={visibleIndex === 0 && !infiniteImg}\n        >\n          {'< Prev'}\n        </button>\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleNext}\n          disabled={visibleIndex >= images.length - stepChange && !infiniteImg}\n        >\n          {'Next >'}\n        </button>\n      </div>\n      <div className=\"Carousel__interactionForms\">\n        <form>\n          <label htmlFor=\"step\">Choose a step:</label>\n          <input\n            id=\"step\"\n            min={2}\n            max={4}\n            type=\"number\"\n            onChange={(e) => {\n              setStepChange(parseInt(e.target.value, 10));\n              setVisibleIndex(0);\n            }}\n            value={stepChange}\n          />\n          <label htmlFor=\"frameSize\">Choose a size frame:</label>\n          <input\n            id=\"frameSize\"\n            min={2}\n            max={5}\n            type=\"number\"\n            onChange={(e) => {\n              setFrameSizeChange(parseInt(e.target.value, 10));\n              setVisibleIndex(0);\n            }}\n            value={frameSizeChange}\n          />\n          <label htmlFor=\"itemWidth\">Choose a width item:</label>\n          <input\n            id=\"itemWidth\"\n            min={130}\n            max={150}\n            type=\"number\"\n            onChange={(e) => setItemWidthChange(parseInt(e.target.value, 10))}\n            value={itemWidthChange}\n          />\n          <label htmlFor=\"duration\">Choose a duration animation:</label>\n          <input\n            id=\"duration\"\n            type=\"number\"\n            min={1000}\n            max={5000}\n            step={50}\n            onChange={(e) => setDuration(parseInt(e.target.value, 10))}\n            value={duration}\n          />\n          <label htmlFor=\"checkbox\">infinite</label>\n          <input\n            id=\"checkbox\"\n            type=\"checkbox\"\n            onChange={(e) => {\n              setInfiniteImg(e.target.checked);\n              setVisibleIndex(0);\n            }}\n            checked={infiniteImg}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">{`Carousel with ${images.length} images`}</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}